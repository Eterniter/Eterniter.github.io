<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>电影信息采集分析系统的设计与实现</title>
      <link href="/2022/07/11/essay/film_system/"/>
      <url>/2022/07/11/essay/film_system/</url>
      
        <content type="html"><![CDATA[<h1 id="电影信息采集分析系统的设计与实现"><a href="#电影信息采集分析系统的设计与实现" class="headerlink" title="电影信息采集分析系统的设计与实现"></a>电影信息采集分析系统的设计与实现</h1><h2 id="计算机科学与技术专业本科毕业设计"><a href="#计算机科学与技术专业本科毕业设计" class="headerlink" title="计算机科学与技术专业本科毕业设计"></a>计算机科学与技术专业本科毕业设计</h2><ul><li><a href="#%E8%83%8C%E6%99%AF">背景</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E8%BF%90%E8%A1%8C">运行</a></li><li><a href="#%E8%AF%81%E4%B9%A6">证书</a></li></ul><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>&ensp; &ensp; 随着经济全球化进程的不断推进以及电影技术革新、拍摄技术迭代，国内外电影的种类和数量持续增长。虽然这些海量的电影资源为用户提供了丰富的体验，但与此同时由于电影的相关数据种类繁多数据量大，对于用户来说想要寻找感兴趣的电影并对其深入了解需要花费更多的时间，基于此设计了一个电影信息采集分析系统。</p><p>&ensp; &ensp; 本系统首先应用爬虫技术采集电影网站的相关数据，在对这些数据进行一系列处理后存入数据库中，从而为后续的分析提供数据支撑。其次对影评数据进行关键词提取，以提取结果为基础通过余弦相似度来计算与之相似的电影从而帮助用户推荐电影。本系统的主要功能包括电影数据采集、影评关键词提取、电影推荐以及数据可视化。通过电影搜索、电影分类、电影榜单、地区偏好来查看电影及其影评用户分析和影评分析，从而帮助用户更加深入地了解电影。</p><p>&ensp; &ensp; 根据本系统的分析结果，用户不但能够在较短时间内了解一部电影，而且还能更快地挑选出感兴趣的电影，具有一定的工程实用价值。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><a href="https://www.python.org/">Python</a> 版本:3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)] on win32<ul><li>所用的库: json、math、hashlib、datetime、queue、collections、time、random、threading、<a href="https://jwt.io/">jwt</a>==2.3.0、black==22.3.0、flask==2.1.1、jieba==0.42.1、lxml==4.8.0、pymysql==1.0.2、requests==2.27.1、selenium==4.1.3</li></ul></li><li>JavaScript<ul><li>所用的库:<a href="https://echarts.apache.org/zh/index.html">ECharts</a> 5.2.1、<a href="https://jquery.com/">jQuery</a> 3.5.1、<a href="https://github.com/timdream/wordcloud2.js">wordcloud2.js</a> 1.2.2</li></ul></li><li>HTML</li><li>CSS<ul><li>所用的库: <a href="https://animate.style/">animate.css</a></li></ul></li><li>前端开发框架:<a href="https://v4.bootcss.com/">Bootstrap 4.6</a></li><li>WEB应用框架:<a href="https://flask.net.cn/">Flask</a> 2.1.1</li><li>数据库:<a href="https://www.mysql.com/">MySQL</a> 8.0.28</li><li>浏览器:<a href="https://www.google.cn/intl/zh-CN/chrome/">谷歌浏览器</a> 101.0.4951.64 (正式版本) (64位)</li><li>谷歌浏览器驱动:<a href="http://chromedriver.storage.googleapis.com/index.html">chromedriver</a> 100.0.4896.60</li></ul><p><a href="https://github.com/Eterniter/film_system-me/blob/main/film_system.sql">film_system.sql</a>至少保存了<a href="https://movie.douban.com/top250">豆瓣电影 Top 250</a>的电影信息、对应电影100条影评数据以及对应影评用户信息。可以在后台管理中根据豆瓣URL添加电影。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>安装<a href="#%E9%85%8D%E7%BD%AE">配置</a>。</li><li>运行<a href="https://github.com/Eterniter/film_system-me/blob/main/film_system.sql">film_system.sql</a>创建数据库。</li><li>在<a href="https://github.com/Eterniter/film_system-me/blob/main/mysql_query.py">mysql_query.py</a>文件中配置好连接数据库的信息。</li><li>运行<a href="https://github.com/Eterniter/film_system-me/blob/main/app.py">app.py</a>文件</li><li>如果开启了爬虫，第一次运行需要微信扫码登录获取<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies">Cookie</a>，务必确保谷歌浏览器版本与<a href="http://chromedriver.storage.googleapis.com/index.html">chromedriver</a>版本适配。<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><a href="https://www.bilibili.com/video/BV1Hg411R76w?spm_id_from=333.999.0.0">演示视频</a><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><a href="LICENSE">MIT</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Graduation Project </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hugo添加Algolia搜索</title>
      <link href="/2022/07/10/blog/Hugo%20LoveIt%E6%B7%BB%E5%8A%A0Algolia%E6%90%9C%E7%B4%A2/"/>
      <url>/2022/07/10/blog/Hugo%20LoveIt%E6%B7%BB%E5%8A%A0Algolia%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<p>本文介绍如何在Hugo LoveIt主题中添加Algolia搜索</p><h2 id="1-在algolia官网注册登录之后，创建应用"><a href="#1-在algolia官网注册登录之后，创建应用" class="headerlink" title="1. 在algolia官网注册登录之后，创建应用"></a>1. 在<a href="https://www.algolia.com/">algolia</a>官网注册登录之后，创建应用</h2><p><img src="https://img-blog.csdnimg.cn/453c1f378f3f408f96574b1010380845.png" alt="在这里插入图片描述"></p><h2 id="2-选择区域，确认应用创建完成，然后创建索引"><a href="#2-选择区域，确认应用创建完成，然后创建索引" class="headerlink" title="2. 选择区域，确认应用创建完成，然后创建索引"></a>2. 选择区域，确认应用创建完成，然后创建索引</h2><p><img src="https://img-blog.csdnimg.cn/a9d82dfe468d45ae8d2fb800bfca6ed2.png" alt="在这里插入图片描述"></p><h2 id="3-运行hugo命令，生成public文件夹"><a href="#3-运行hugo命令，生成public文件夹" class="headerlink" title="3. 运行hugo命令，生成public文件夹"></a>3. 运行hugo命令，生成public文件夹</h2><p><img src="https://img-blog.csdnimg.cn/f89e1b1a0ef94c9a8dce76cd24c4b043.png" alt="在这里插入图片描述"></p><h2 id="4-上传index-json"><a href="#4-上传index-json" class="headerlink" title="4. 上传index.json"></a>4. 上传index.json</h2><p><img src="https://img-blog.csdnimg.cn/3049be2fcec943bfb45884dab91bd3c9.png" alt="在这里插入图片描述"></p><h2 id="5-进入API页面"><a href="#5-进入API页面" class="headerlink" title="5. 进入API页面"></a>5. 进入<a href="https://www.algolia.com/account/api-keys/">API页面</a></h2><p><img src="https://img-blog.csdnimg.cn/2913b13d249d4d62a1ca4b252d386304.png" alt="在这里插入图片描述"></p><h2 id="6-配置config-toml"><a href="#6-配置config-toml" class="headerlink" title="6. 配置config.toml"></a>6. 配置config.toml</h2><p><img src="https://img-blog.csdnimg.cn/80f2f1376bc847a9ad602daa167a9836.png" alt="在这里插入图片描述"></p><p>将之前的索引名、Application ID、Search-Only API Key依次填入params.search.algolia即可。<br><img src="https://img-blog.csdnimg.cn/5dce5488efd9485fb00bcacb746242de.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> hugo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hugo </tag>
            
            <tag> algolia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库原理之候选码的求解</title>
      <link href="/2022/07/10/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B9%8B%E5%80%99%E9%80%89%E7%A0%81%E7%9A%84%E6%B1%82%E8%A7%A3/"/>
      <url>/2022/07/10/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B9%8B%E5%80%99%E9%80%89%E7%A0%81%E7%9A%84%E6%B1%82%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="属性的分类"><a href="#属性的分类" class="headerlink" title="属性的分类"></a>属性的分类</h2><p>R(A1，A2，…，An)和函数依赖集F，属性分4类<br>L类：仅出现在F的函数依赖左部的属性<br>R类：仅出现在F的函数依赖右部的属性<br>N类：在F的函数依赖两边均未出现的属性<br>LR类：在F的函数依赖两边均出现的属性</p><hr><h2 id="预备知识："><a href="#预备知识：" class="headerlink" title="预备知识："></a>预备知识：</h2><p>对于给定的关系模式R及其函数依赖集F，</p><p>1.如果X（X∈R）是L类属性，则X必为任一候选码的成员。更进一步，如果X关于F的闭包包含了R的全部属性，则X必为R的唯一候选码。（由此可见一些题目的候选码并不唯一）</p><p>2.如果X是R类属性，则X不在任何候选码中。</p><p>3.如果X是N类属性，则X必定在任一候选码中。正因为X是N类属性在F的函数依赖两边都不出现，所以N类和L类组成的函数集关于F的闭包才能包含R的全部属性，即如果N类和L类组成的函数集关于F的闭包包含R的全部属性，则X必为唯一候选码。</p><hr><h2 id="候选码求解的方法："><a href="#候选码求解的方法：" class="headerlink" title="候选码求解的方法："></a>候选码求解的方法：</h2><p>(1).找出L类属性和N类属性 例如：AB</p><p>然后判断AB关于F的闭包是否包含R的全部属性，若包含，则AB必为唯一的候选码，后面的都不用看了</p><p>(2).找出LR类属性 例如 C，D</p><p>(3).将1和2中找到的属性进行组合，例如 ABC和ABD</p><p>然后分别求其闭包,如果包含R的全部属性，即为候选码。如果都包含的话，则都是候选码。（也就是候选码不唯一）</p><hr><h2 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h2><p>(1).R(X,Y,Z) F=(XY→Z)</p><p>首先找出L类属性XY，无N类属性，</p><p>求XY关于F的闭包为XYZ，包含R的全部属性，</p><p>则R的候选码为XY</p><hr><p>(2).R(X,Y,Z) F=(Y→Z，XZ→Y)</p><p>L类属性:X，无N类属性，</p><p>求X关于F的闭包为X，不包含R的全部属性，</p><p>继续找LR类属性:Y、Z</p><p>XY关于F的闭包为XYZ,包含R的全部属性</p><p>XZ关于F的闭包为XYZ,包含R的全部属性</p><p>所以R的候选码为XY和XZ.(R中所有属性X,Y,Z都是主属性)</p><hr><p>(3).R(X,Y,Z) F=(Y→Z，Y→X，X→YZ)</p><p>无L类属性，无N类属性，</p><p>继续找LR类属性:X、Y、Z</p><p>X关于F的闭包为XYZ,包含R的全部属性</p><p>Y关于F的闭包为XYZ,包含R的全部属性</p><p>Z关于F的闭包为Z,不包含R的全部属性</p><p>所以R的候选码为X和Y.</p><hr><p>(4).R(X,Y,Z) F=(X→Y，X→Z)</p><p>L类属性:X，无N类属性，</p><p>X关于F的闭包为XYZ,包含R的全部属性</p><p>所以R的候选码为X.</p><hr><p>(5).R(W,X,Y,Z) F=(X→Z,WX→Y)</p><p>L类属性:WX，无N类属性，</p><p>WX关于F的闭包为WXYZ,包含R的全部属性</p><p>所以R的候选码为WX.</p><hr><p>(6).R(W,X,Y,Z) F=(X→Z,X→Y)</p><p>L类属性:X，N类属性:W，</p><p>WX关于F的闭包为WXYZ,包含R的全部属性</p><p>所以R的候选码为WX.</p><hr>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库原理之范式判断</title>
      <link href="/2022/07/10/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B9%8B%E8%8C%83%E5%BC%8F%E5%88%A4%E6%96%AD/"/>
      <url>/2022/07/10/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B9%8B%E8%8C%83%E5%BC%8F%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="判断范式的步骤："><a href="#判断范式的步骤：" class="headerlink" title="判断范式的步骤："></a>判断范式的步骤：</h2><p><img src="https://img-blog.csdnimg.cn/2020040619201566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNDU3NDYz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><a href="https://blog.csdn.net/m0_43457463/article/details/105342291">如何确定候选键</a></p><hr><p>判断3NF需要注意,例如:有F={X→Y,Y→Z，Y→X}<br>如果Y属于X，则Y平凡依赖于X，则Z直接依赖于X，满足3NF；<br>如果Y不属于X，则Y非平凡依赖于X，则Z传递依赖于X，不满足3NF.</p><hr><h2 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h2><p>(1).R(X,Y,Z) F=(XY→Z)<br>R的候选码为XY<br>非主属性:Z<br>不存在非主属性对候选键部分函数依赖<br>不存在非主属性传递依赖于候选键<br>函数依赖的左边XY为候选键<br>因此此范式达到BCNF</p><hr><p>(2).R(X,Y,Z) F=(Y→Z，XZ→Y)<br>R的候选码为XY和XZ.<br>非主属性：无 因为非主属性的不存在所以至少达到3NF<br>第一个函数依赖Y→Z的左边Y不是候选键<br>因此此范式达到3NF</p><hr><p>(3).R(X,Y,Z) F=(Y→Z，Y→X，X→YZ)<br>R的候选码为X和Y.<br>非主属性:Z<br>不存在非主属性对候选键部分函数依赖<br>由于X→YZ 所以存在Y→X,X→Z 但是该范式却是BCNF，因为判断3NF有两个条件，Y→X,X→Z满足第一个条件，但不满足第二个条件：X不能推出Y.<br>然后三个函数依赖的左边都是候选键<br>因此此范式达到BCNF</p><hr><p>(4).R(X,Y,Z) F=(X→Y，X→Z)<br>R的候选码为X.<br>非主属性:Y、Z<br>两个函数依赖的左边都是候选键<br>因此此范式达到BCNF</p><hr><p>(5).R(S,T,J) F={SJ→T,ST→J,T→J}<br>R的候选码为SJ和ST<br>非主属性：无 因为非主属性的不存在所以至少达到3NF<br>由T→J左边T不是候选码<br>因此此范式达到3NF</p><hr><p>(6).R(A,B,C,D) F={B→C,C→D,D→A}<br>R的候选码为B<br>非主属性：A,C,D<br>候选码为单属性，因此不存在非主属性对候选键部分函数依赖<br>由B→C,C→D且C不能推出B可知此范式不满足3NF<br>因此此范式达到2NF</p><hr>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>伊始</title>
      <link href="/2022/07/10/essay/%E4%BC%8A%E5%A7%8B/"/>
      <url>/2022/07/10/essay/%E4%BC%8A%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="This-website-is-officially-launched-today"><a href="#This-website-is-officially-launched-today" class="headerlink" title="This website is officially launched today."></a>This website is officially launched today.</h1>]]></content>
      
      
      <categories>
          
          <category> essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> essay </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
